
meteoMN.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00001364  000013f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001364  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  0080011c  0080011c  00001414  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001414  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001444  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00001480  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000022e8  00000000  00000000  000015e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009fa  00000000  00000000  000038c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d7e  00000000  00000000  000042c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003d0  00000000  00000000  00005040  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000710  00000000  00000000  00005410  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000136d  00000000  00000000  00005b20  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00006e8d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	01 c5       	rjmp	.+2562   	; 0xa04 <__ctors_end>
       2:	1b c5       	rjmp	.+2614   	; 0xa3a <__bad_interrupt>
       4:	1a c5       	rjmp	.+2612   	; 0xa3a <__bad_interrupt>
       6:	19 c5       	rjmp	.+2610   	; 0xa3a <__bad_interrupt>
       8:	18 c5       	rjmp	.+2608   	; 0xa3a <__bad_interrupt>
       a:	17 c5       	rjmp	.+2606   	; 0xa3a <__bad_interrupt>
       c:	16 c5       	rjmp	.+2604   	; 0xa3a <__bad_interrupt>
       e:	15 c5       	rjmp	.+2602   	; 0xa3a <__bad_interrupt>
      10:	14 c5       	rjmp	.+2600   	; 0xa3a <__bad_interrupt>
      12:	13 c5       	rjmp	.+2598   	; 0xa3a <__bad_interrupt>
      14:	12 c5       	rjmp	.+2596   	; 0xa3a <__bad_interrupt>
      16:	0f c9       	rjmp	.-3554   	; 0xfffff236 <__eeprom_end+0xff7ef236>
      18:	10 c5       	rjmp	.+2592   	; 0xa3a <__bad_interrupt>
      1a:	0f c5       	rjmp	.+2590   	; 0xa3a <__bad_interrupt>
      1c:	0e c5       	rjmp	.+2588   	; 0xa3a <__bad_interrupt>
      1e:	0d c5       	rjmp	.+2586   	; 0xa3a <__bad_interrupt>
      20:	0c c5       	rjmp	.+2584   	; 0xa3a <__bad_interrupt>
      22:	0b c5       	rjmp	.+2582   	; 0xa3a <__bad_interrupt>
      24:	0a c5       	rjmp	.+2580   	; 0xa3a <__bad_interrupt>
      26:	09 c5       	rjmp	.+2578   	; 0xa3a <__bad_interrupt>
      28:	08 c5       	rjmp	.+2576   	; 0xa3a <__bad_interrupt>
      2a:	07 c5       	rjmp	.+2574   	; 0xa3a <__bad_interrupt>
      2c:	06 c5       	rjmp	.+2572   	; 0xa3a <__bad_interrupt>
      2e:	05 c5       	rjmp	.+2570   	; 0xa3a <__bad_interrupt>
      30:	04 c5       	rjmp	.+2568   	; 0xa3a <__bad_interrupt>
      32:	03 c5       	rjmp	.+2566   	; 0xa3a <__bad_interrupt>

00000034 <__trampolines_end>:
      34:	ae d5       	rcall	.+2908   	; 0xb92 <ssd1306_draw_bmp+0x80>
      36:	f0 a8       	ldd	r15, Z+48	; 0x30
      38:	3f d3       	rcall	.+1662   	; 0x6b8 <__stack+0x1b9>
      3a:	00 40       	sbci	r16, 0x00	; 0
      3c:	8d 14       	cp	r8, r13
      3e:	20 00       	.word	0x0020	; ????
      40:	a1 c8       	rjmp	.-3774   	; 0xfffff184 <__eeprom_end+0xff7ef184>
      42:	da 12       	cpse	r13, r26
      44:	81 3f       	cpi	r24, 0xF1	; 241
      46:	d9 22       	and	r13, r25
      48:	db 20       	and	r13, r11
      4a:	a4 a6       	std	Z+44, r10	; 0x2c
      4c:	2e af       	std	Y+62, r18	; 0x3e
      4e:	22 00       	.word	0x0022	; ????
      50:	3f 21       	and	r19, r15
      52:	00 7f       	andi	r16, 0xF0	; 240

00000054 <number9>:
      54:	00 00 00 00 c0 f0 78 18 1c 0c 0e 06 0e 1c 18 38     ......x........8
      64:	f0 e0 00 00 00 00 00 00 00 00 00 00 3f 7f 60 60     ............?.``
      74:	e0 c0 c0 c0 c0 c0 e0 f0 ff ff 00 00 00 00 00 00     ................
	...
      90:	00 00 01 ff ff 03 00 00 00 00 00 00 00 00 00 0f     ................
      a0:	3f 78 60 60 60 60 60 60 70 38 3e 0f 03 00 00 00     ?x``````p8>.....
      b0:	00 00 00 00                                         ....

000000b4 <number8>:
      b4:	00 00 00 00 c0 e0 70 38 1c 0e 07 07 06 0e 1c 78     ......p8.......x
      c4:	f0 c0 00 00 00 00 00 00 00 00 00 00 1f 3f 30 70     .............?0p
      d4:	60 e0 c0 c0 c0 e0 70 3e 3f 03 00 00 00 00 00 00     `.....p>?.......
      e4:	00 00 00 00 c0 f0 7c 1e 07 03 03 01 01 03 03 07     ......|.........
      f4:	3e fc e0 00 00 00 00 00 00 00 00 00 03 0f 1e 18     >...............
     104:	18 18 18 18 18 18 1c 0e 07 03 01 00 00 00 00 00     ................

00000114 <number7>:
     114:	00 10 18 18 18 18 18 18 18 18 18 18 18 18 18 18     ................
     124:	18 18 f8 f8 30 00 00 00 00 00 00 00 00 00 00 00     ....0...........
     134:	00 00 00 00 00 00 00 c0 fc 7f 07 01 00 00 00 00     ................
     144:	00 00 00 00 00 00 00 04 06 06 06 86 e6 fe 3e 0f     ..............>.
     154:	07 06 06 06 04 00 00 00 00 00 00 00 00 00 00 00     ................
     164:	40 70 7c 1f 07 00 00 00 00 00 00 00 00 00 00 00     @p|.............

00000174 <number6>:
     174:	00 00 00 00 00 00 80 c0 e0 70 30 30 30 30 70 60     .........p0000p`
     184:	e0 c0 80 00 00 00 00 00 00 00 00 00 f8 fe 0f 03     ................
     194:	80 80 c0 c0 c0 c0 c0 80 00 01 07 07 00 00 00 00     ................
     1a4:	00 00 00 00 ff ff 0e 07 03 01 01 00 00 00 01 03     ................
     1b4:	1f fe f0 00 00 00 00 00 00 00 00 00 01 07 0f 0c     ................
     1c4:	1c 18 38 30 30 30 38 1c 0e 0f 03 00 00 00 00 00     ..80008.........

000001d4 <number5>:
     1d4:	00 00 00 f0 f8 18 18 18 18 18 18 18 18 18 18 18     ................
     1e4:	18 18 18 10 00 00 00 00 00 00 00 1f ff f0 80 80     ................
     1f4:	c0 c0 c0 c0 c0 80 80 00 00 00 00 00 00 00 00 00     ................
     204:	00 00 00 00 03 03 03 01 01 00 00 00 01 01 03 07     ................
     214:	1e fc f0 00 00 00 00 00 00 00 00 00 1c 3c 30 30     .............<00
     224:	30 30 30 30 30 38 18 1c 0f 07 01 00 00 00 00 00     000008..........

00000234 <number4>:
     234:	00 00 00 00 00 00 fc fc 00 00 00 00 00 00 00 00     ................
	...
     250:	80 f0 ff 1f 00 00 00 00 00 00 00 00 f0 f0 00 00     ................
	...
     268:	03 03 03 03 03 03 03 03 03 03 03 03 ff ff 03 02     ................
	...
     28c:	3f 3f 00 00 00 00 00 00                             ??......

00000294 <number3>:
     294:	00 00 00 00 c0 e0 70 30 30 38 18 18 18 18 18 38     ......p008.....8
     2a4:	f0 e0 00 00 00 00 00 00 00 00 00 03 03 01 00 00     ................
     2b4:	00 00 80 80 80 80 c0 c0 f1 7f 1f 00 00 00 00 00     ................
	...
     2cc:	00 01 03 03 03 03 07 0e fc f8 00 00 00 00 00 00     ................
     2dc:	00 00 03 07 06 0e 0c 0c 0c 0c 0c 0c 0c 0c 0c 0c     ................
     2ec:	0f 07 00 00 00 00 00 00                             ........

000002f4 <number2>:
     2f4:	00 00 00 00 c0 e0 70 38 18 18 18 18 38 70 e0 c0     ......p8....8p..
	...
     310:	03 03 00 00 00 00 00 00 80 e0 ff 3f 00 00 00 00     ...........?....
	...
     328:	00 00 80 c0 f0 78 1c 0e 07 03 00 00 00 00 00 00     .....x..........
     338:	00 00 00 00 00 00 00 18 1e 1f 1b 19 18 18 18 18     ................
     348:	18 18 18 18 18 18 18 10 00 00 00 00                 ............

00000354 <number1>:
	...
     360:	c0 e0 f0 f0 e0 00 00 00 00 00 00 00 00 00 00 00     ................
     370:	00 00 80 e0 f0 38 1c 1f 07 03 ff ff 03 00 00 00     .....8..........
	...
     388:	00 00 03 01 00 00 00 00 c0 fe 7f 03 00 00 00 00     ................
	...
     3a0:	00 20 30 30 30 30 30 38 3f 3f 30 30 30 30 30 30     . 000008??000000
     3b0:	20 00 00 00                                          ...

000003b4 <number0>:
     3b4:	00 00 00 00 00 00 c0 e0 70 38 1c 08 0c 18 38 70     ........p8....8p
     3c4:	e0 c0 80 00 00 00 00 00 00 00 00 00 fc ff 07 01     ................
	...
     3dc:	00 01 0f ff f8 00 00 00 00 00 00 00 7f ff c0 00     ................
	...
     3f4:	00 00 e0 ff 3f 00 00 00 00 00 00 00 00 01 03 07     ....?...........
     404:	0e 0c 1c 18 18 18 18 18 1c 0c 0f 07 00 00 00 00     ................

00000414 <ssd1306xled_font8x16data>:
	...
     424:	00 00 00 f8 00 00 00 00 00 00 00 33 30 00 00 00     ...........30...
     434:	00 10 0c 06 10 0c 06 00 00 00 00 00 00 00 00 00     ................
     444:	40 c0 78 40 c0 78 40 00 04 3f 04 04 3f 04 04 00     @.x@.x@..?..?...
     454:	00 70 88 fc 08 30 00 00 00 18 20 ff 21 1e 00 00     .p...0.... .!...
     464:	f0 08 f0 00 e0 18 00 00 00 21 1c 03 1e 21 1e 00     .........!...!..
     474:	00 f0 08 88 70 00 00 00 1e 21 23 24 19 27 21 10     ....p....!#$.'!.
     484:	10 16 0e 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     494:	00 00 00 e0 18 04 02 00 00 00 00 07 18 20 40 00     ............. @.
     4a4:	00 02 04 18 e0 00 00 00 00 40 20 18 07 00 00 00     .........@ .....
     4b4:	40 40 80 f0 80 40 40 00 02 02 01 0f 01 02 02 00     @@...@@.........
     4c4:	00 00 00 f0 00 00 00 00 01 01 01 1f 01 01 01 00     ................
	...
     4dc:	80 b0 70 00 00 00 00 00 00 00 00 00 00 00 00 00     ..p.............
     4ec:	00 01 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
     4fc:	00 30 30 00 00 00 00 00 00 00 00 00 80 60 18 04     .00..........`..
     50c:	00 60 18 06 01 00 00 00 00 e0 10 08 08 10 e0 00     .`..............
     51c:	00 0f 10 20 20 10 0f 00 00 10 10 f8 00 00 00 00     ...  ...........
     52c:	00 20 20 3f 20 20 00 00 00 70 08 08 08 88 70 00     .  ?  ...p....p.
     53c:	00 30 28 24 22 21 30 00 00 30 08 88 88 48 30 00     .0($"!0..0...H0.
     54c:	00 18 20 20 20 11 0e 00 00 00 c0 20 10 f8 00 00     ..   ...... ....
     55c:	00 07 04 24 24 3f 24 00 00 f8 08 88 88 08 08 00     ...$$?$.........
     56c:	00 19 21 20 20 11 0e 00 00 e0 10 88 88 18 00 00     ..!  ...........
     57c:	00 0f 11 20 20 11 0e 00 00 38 08 08 c8 38 08 00     ...  ....8...8..
     58c:	00 00 00 3f 00 00 00 00 00 70 88 08 08 88 70 00     ...?.....p....p.
     59c:	00 1c 22 21 21 22 1c 00 00 e0 10 08 08 10 e0 00     .."!!"..........
     5ac:	00 00 31 22 22 11 0f 00 00 00 00 c0 c0 00 00 00     ..1""...........
     5bc:	00 00 00 30 30 00 00 00 00 00 00 80 00 00 00 00     ...00...........
     5cc:	00 00 80 60 00 00 00 00 00 00 80 40 20 10 08 00     ...`.......@ ...
     5dc:	00 01 02 04 08 10 20 00 40 40 40 40 40 40 40 00     ...... .@@@@@@@.
     5ec:	04 04 04 04 04 04 04 00 00 08 10 20 40 80 00 00     ........... @...
     5fc:	00 20 10 08 04 02 01 00 00 70 48 08 08 08 f0 00     . .......pH.....
     60c:	00 00 00 30 36 01 00 00 c0 30 c8 28 e8 10 e0 00     ...06....0.(....
     61c:	07 18 27 24 23 14 0b 00 00 00 c0 38 e0 00 00 00     ..'$#......8....
     62c:	20 3c 23 02 02 27 38 20 08 f8 88 88 88 70 00 00      <#..'8 .....p..
     63c:	20 3f 20 20 20 11 0e 00 c0 30 08 08 08 08 38 00      ?   ....0....8.
     64c:	07 18 20 20 20 10 08 00 08 f8 08 08 08 10 e0 00     ..   ...........
     65c:	20 3f 20 20 20 10 0f 00 08 f8 88 88 e8 08 10 00      ?   ...........
     66c:	20 3f 20 20 23 20 18 00 08 f8 88 88 e8 08 10 00      ?  # ..........
     67c:	20 3f 20 00 03 00 00 00 c0 30 08 08 08 38 00 00      ? ......0...8..
     68c:	07 18 20 20 22 1e 02 00 08 f8 08 00 00 08 f8 08     ..  "...........
     69c:	20 3f 21 01 01 21 3f 20 00 08 08 f8 08 08 00 00      ?!..!? ........
     6ac:	00 20 20 3f 20 20 00 00 00 00 08 08 f8 08 08 00     .  ?  ..........
     6bc:	c0 80 80 80 7f 00 00 00 08 f8 88 c0 28 18 08 00     ............(...
     6cc:	20 3f 20 01 26 38 20 00 08 f8 08 00 00 00 00 00      ? .&8 .........
     6dc:	20 3f 20 20 20 20 30 00 08 f8 f8 00 f8 f8 08 00      ?    0.........
     6ec:	20 3f 00 3f 00 3f 20 00 08 f8 30 c0 00 08 f8 08      ?.?.? ...0.....
     6fc:	20 3f 20 00 07 18 3f 00 e0 10 08 08 08 10 e0 00      ? ...?.........
     70c:	0f 10 20 20 20 10 0f 00 08 f8 08 08 08 08 f0 00     ..   ...........
     71c:	20 3f 21 01 01 01 00 00 e0 10 08 08 08 10 e0 00      ?!.............
     72c:	0f 18 24 24 38 50 4f 00 08 f8 88 88 88 88 70 00     ..$$8PO.......p.
     73c:	20 3f 20 00 03 0c 30 20 00 70 88 08 08 08 38 00      ? ...0 .p....8.
     74c:	00 38 20 21 21 22 1c 00 18 08 08 f8 08 08 18 00     .8 !!"..........
     75c:	00 00 20 3f 20 00 00 00 08 f8 08 00 00 08 f8 08     .. ? ...........
     76c:	00 1f 20 20 20 20 1f 00 08 78 88 00 00 c8 38 08     ..    ...x....8.
     77c:	00 00 07 38 0e 01 00 00 f8 08 00 f8 00 08 f8 00     ...8............
     78c:	03 3c 07 00 07 3c 03 00 08 18 68 80 80 68 18 08     .<...<....h..h..
     79c:	20 30 2c 03 03 2c 30 20 08 38 c8 00 c8 38 08 00      0,..,0 .8...8..
     7ac:	00 00 20 3f 20 00 00 00 10 08 08 08 c8 38 08 00     .. ? ........8..
     7bc:	20 38 26 21 20 20 18 00 00 00 00 fe 02 02 02 00      8&!  ..........
     7cc:	00 00 00 7f 40 40 40 00 00 0c 30 c0 00 00 00 00     ....@@@...0.....
     7dc:	00 00 00 01 06 38 c0 00 00 02 02 02 fe 00 00 00     .....8..........
     7ec:	00 40 40 40 7f 00 00 00 00 00 04 02 02 02 04 00     .@@@............
	...
     80c:	80 80 80 80 80 80 80 80 00 02 02 04 00 00 00 00     ................
	...
     824:	00 00 80 80 80 80 00 00 00 19 24 22 22 22 3f 20     ..........$"""? 
     834:	08 f8 00 80 80 00 00 00 00 3f 11 20 20 11 0e 00     .........?.  ...
     844:	00 00 00 80 80 80 00 00 00 0e 11 20 20 20 11 00     ...........   ..
     854:	00 00 00 80 80 88 f8 00 00 0e 11 20 20 10 3f 20     ...........  .? 
     864:	00 00 80 80 80 80 00 00 00 1f 22 22 22 22 13 00     ..........""""..
     874:	00 80 80 f0 88 88 88 18 00 20 20 3f 20 20 00 00     .........  ?  ..
     884:	00 00 80 80 80 80 80 00 00 6b 94 94 94 93 60 00     .........k....`.
     894:	08 f8 00 80 80 80 00 00 20 3f 21 00 00 20 3f 20     ........ ?!.. ? 
     8a4:	00 80 98 98 00 00 00 00 00 20 20 3f 20 20 00 00     .........  ?  ..
     8b4:	00 00 00 80 98 98 00 00 00 c0 80 80 80 7f 00 00     ................
     8c4:	08 f8 00 00 80 80 80 00 20 3f 24 02 2d 30 20 00     ........ ?$.-0 .
     8d4:	00 08 08 f8 00 00 00 00 00 20 20 3f 20 20 00 00     .........  ?  ..
     8e4:	80 80 80 80 80 80 80 00 20 3f 20 00 3f 20 00 3f     ........ ? .? .?
     8f4:	80 80 00 80 80 80 00 00 20 3f 21 00 00 20 3f 20     ........ ?!.. ? 
     904:	00 00 80 80 80 80 00 00 00 1f 20 20 20 20 1f 00     ..........    ..
     914:	80 80 00 80 80 00 00 00 80 ff a1 20 20 11 0e 00     ...........  ...
     924:	00 00 00 80 80 80 80 00 00 0e 11 20 20 a0 ff 80     ...........  ...
     934:	80 80 80 00 80 80 80 00 20 20 3f 21 20 00 01 00     ........  ?! ...
     944:	00 00 80 80 80 80 80 00 00 33 24 24 24 24 19 00     .........3$$$$..
     954:	00 80 80 e0 80 80 00 00 00 00 00 1f 20 20 00 00     ............  ..
     964:	80 80 00 00 00 80 80 00 00 1f 20 20 20 10 3f 20     ..........   .? 
     974:	80 80 80 00 00 80 80 80 00 01 0e 30 08 06 01 00     ...........0....
     984:	80 80 00 80 00 80 80 80 0f 30 0c 03 0c 30 0f 00     .........0...0..
     994:	00 80 80 00 80 80 80 00 00 20 31 2e 0e 31 20 00     ......... 1..1 .
     9a4:	80 80 80 00 00 80 80 80 80 81 8e 70 18 06 01 00     ...........p....
     9b4:	00 80 80 80 80 80 80 00 00 21 30 2c 22 21 30 00     .........!0,"!0.
     9c4:	00 00 00 00 80 7c 02 02 00 00 00 00 00 3f 40 40     .....|.......?@@
     9d4:	00 00 00 00 ff 00 00 00 00 00 00 00 ff 00 00 00     ................
     9e4:	00 02 02 7c 80 00 00 00 00 40 40 3f 00 00 00 00     ...|.....@@?....
     9f4:	00 06 01 01 02 02 04 04 00 00 00 00 00 00 00 00     ................

00000a04 <__ctors_end>:
     a04:	11 24       	eor	r1, r1
     a06:	1f be       	out	0x3f, r1	; 63
     a08:	cf ef       	ldi	r28, 0xFF	; 255
     a0a:	d4 e0       	ldi	r29, 0x04	; 4
     a0c:	de bf       	out	0x3e, r29	; 62
     a0e:	cd bf       	out	0x3d, r28	; 61

00000a10 <__do_copy_data>:
     a10:	11 e0       	ldi	r17, 0x01	; 1
     a12:	a0 e0       	ldi	r26, 0x00	; 0
     a14:	b1 e0       	ldi	r27, 0x01	; 1
     a16:	e4 e6       	ldi	r30, 0x64	; 100
     a18:	f3 e1       	ldi	r31, 0x13	; 19
     a1a:	02 c0       	rjmp	.+4      	; 0xa20 <__do_copy_data+0x10>
     a1c:	05 90       	lpm	r0, Z+
     a1e:	0d 92       	st	X+, r0
     a20:	ac 31       	cpi	r26, 0x1C	; 28
     a22:	b1 07       	cpc	r27, r17
     a24:	d9 f7       	brne	.-10     	; 0xa1c <__do_copy_data+0xc>

00000a26 <__do_clear_bss>:
     a26:	21 e0       	ldi	r18, 0x01	; 1
     a28:	ac e1       	ldi	r26, 0x1C	; 28
     a2a:	b1 e0       	ldi	r27, 0x01	; 1
     a2c:	01 c0       	rjmp	.+2      	; 0xa30 <.do_clear_bss_start>

00000a2e <.do_clear_bss_loop>:
     a2e:	1d 92       	st	X+, r1

00000a30 <.do_clear_bss_start>:
     a30:	a4 32       	cpi	r26, 0x24	; 36
     a32:	b2 07       	cpc	r27, r18
     a34:	e1 f7       	brne	.-8      	; 0xa2e <.do_clear_bss_loop>
     a36:	01 d3       	rcall	.+1538   	; 0x103a <main>
     a38:	93 c4       	rjmp	.+2342   	; 0x1360 <_exit>

00000a3a <__bad_interrupt>:
     a3a:	e2 ca       	rjmp	.-2620   	; 0x0 <__vectors>

00000a3c <I2C_Initialize>:
{
	//TWSR |= 0x00; // Set prescaler to 1

	uint8_t bitrate_div;

	bitrate_div = ((F_CPU/1000l)/bitRate_kHz);
     a3c:	9c 01       	movw	r18, r24
     a3e:	40 e0       	ldi	r20, 0x00	; 0
     a40:	50 e0       	ldi	r21, 0x00	; 0
     a42:	60 e4       	ldi	r22, 0x40	; 64
     a44:	7f e1       	ldi	r23, 0x1F	; 31
     a46:	80 e0       	ldi	r24, 0x00	; 0
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	38 d4       	rcall	.+2160   	; 0x12bc <__divmodsi4>
     a4c:	82 2f       	mov	r24, r18
	
	if(bitrate_div >= 16)
     a4e:	20 31       	cpi	r18, 0x10	; 16
     a50:	48 f0       	brcs	.+18     	; 0xa64 <I2C_Initialize+0x28>
	bitrate_div = (bitrate_div-16)/2;
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	20 51       	subi	r18, 0x10	; 16
     a56:	31 09       	sbc	r19, r1
     a58:	c9 01       	movw	r24, r18
     a5a:	99 23       	and	r25, r25
     a5c:	0c f4       	brge	.+2      	; 0xa60 <I2C_Initialize+0x24>
     a5e:	01 96       	adiw	r24, 0x01	; 1
     a60:	95 95       	asr	r25
     a62:	87 95       	ror	r24
	
	TWBR = bitrate_div;
     a64:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
     a68:	08 95       	ret

00000a6a <I2C_start>:
}

void I2C_start(void){
	TWCR = (1<<TWINT) | (1<<TWEN) |( 1<<TWSTA);
     a6a:	84 ea       	ldi	r24, 0xA4	; 164
     a6c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (! (TWCR & (1<<TWINT)));
     a70:	ec eb       	ldi	r30, 0xBC	; 188
     a72:	f0 e0       	ldi	r31, 0x00	; 0
     a74:	80 81       	ld	r24, Z
     a76:	88 23       	and	r24, r24
     a78:	ec f7       	brge	.-6      	; 0xa74 <I2C_start+0xa>
}
     a7a:	08 95       	ret

00000a7c <I2C_stop>:

void I2C_stop(void){
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     a7c:	84 e9       	ldi	r24, 0x94	; 148
     a7e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (! (TWCR & (1<<TWSTO)));
     a82:	ec eb       	ldi	r30, 0xBC	; 188
     a84:	f0 e0       	ldi	r31, 0x00	; 0
     a86:	80 81       	ld	r24, Z
     a88:	84 ff       	sbrs	r24, 4
     a8a:	fd cf       	rjmp	.-6      	; 0xa86 <I2C_stop+0xa>
}
     a8c:	08 95       	ret

00000a8e <I2C_write>:

void I2C_write(uint8_t dane){
	TWDR = dane;
     a8e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1<<TWINT) | (1<<TWEN);
     a92:	84 e8       	ldi	r24, 0x84	; 132
     a94:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (! (TWCR & (1<<TWINT)));
     a98:	ec eb       	ldi	r30, 0xBC	; 188
     a9a:	f0 e0       	ldi	r31, 0x00	; 0
     a9c:	80 81       	ld	r24, Z
     a9e:	88 23       	and	r24, r24
     aa0:	ec f7       	brge	.-6      	; 0xa9c <I2C_write+0xe>
}
     aa2:	08 95       	ret

00000aa4 <ssd1306_start_command>:
	{ 
		number = max;
	}
	
	return number;
}
     aa4:	e2 df       	rcall	.-60     	; 0xa6a <I2C_start>
     aa6:	88 e7       	ldi	r24, 0x78	; 120
     aa8:	f2 df       	rcall	.-28     	; 0xa8e <I2C_write>
     aaa:	80 e0       	ldi	r24, 0x00	; 0
     aac:	f0 df       	rcall	.-32     	; 0xa8e <I2C_write>
     aae:	08 95       	ret

00000ab0 <ssd1306_start_data>:
     ab0:	dc df       	rcall	.-72     	; 0xa6a <I2C_start>
     ab2:	88 e7       	ldi	r24, 0x78	; 120
     ab4:	ec df       	rcall	.-40     	; 0xa8e <I2C_write>
     ab6:	80 e4       	ldi	r24, 0x40	; 64
     ab8:	ea df       	rcall	.-44     	; 0xa8e <I2C_write>
     aba:	08 95       	ret

00000abc <ssd1306_init>:
     abc:	0f 93       	push	r16
     abe:	1f 93       	push	r17
     ac0:	cf 93       	push	r28
     ac2:	df 93       	push	r29
     ac4:	ef df       	rcall	.-34     	; 0xaa4 <ssd1306_start_command>
     ac6:	c4 e3       	ldi	r28, 0x34	; 52
     ac8:	d0 e0       	ldi	r29, 0x00	; 0
     aca:	04 e5       	ldi	r16, 0x54	; 84
     acc:	10 e0       	ldi	r17, 0x00	; 0
     ace:	fe 01       	movw	r30, r28
     ad0:	84 91       	lpm	r24, Z
     ad2:	dd df       	rcall	.-70     	; 0xa8e <I2C_write>
     ad4:	21 96       	adiw	r28, 0x01	; 1
     ad6:	c0 17       	cp	r28, r16
     ad8:	d1 07       	cpc	r29, r17
     ada:	c9 f7       	brne	.-14     	; 0xace <ssd1306_init+0x12>
     adc:	cf df       	rcall	.-98     	; 0xa7c <I2C_stop>
     ade:	df 91       	pop	r29
     ae0:	cf 91       	pop	r28
     ae2:	1f 91       	pop	r17
     ae4:	0f 91       	pop	r16
     ae6:	08 95       	ret

00000ae8 <ssd1306_setpos>:
     ae8:	cf 93       	push	r28
     aea:	df 93       	push	r29
     aec:	c8 2f       	mov	r28, r24
     aee:	d6 2f       	mov	r29, r22
     af0:	d9 df       	rcall	.-78     	; 0xaa4 <ssd1306_start_command>
     af2:	8d 2f       	mov	r24, r29
     af4:	87 70       	andi	r24, 0x07	; 7
     af6:	80 6b       	ori	r24, 0xB0	; 176
     af8:	ca df       	rcall	.-108    	; 0xa8e <I2C_write>
     afa:	8c 2f       	mov	r24, r28
     afc:	8f 70       	andi	r24, 0x0F	; 15
     afe:	c7 df       	rcall	.-114    	; 0xa8e <I2C_write>
     b00:	8c 2f       	mov	r24, r28
     b02:	82 95       	swap	r24
     b04:	8f 70       	andi	r24, 0x0F	; 15
     b06:	80 61       	ori	r24, 0x10	; 16
     b08:	c2 df       	rcall	.-124    	; 0xa8e <I2C_write>
     b0a:	b8 df       	rcall	.-144    	; 0xa7c <I2C_stop>
     b0c:	df 91       	pop	r29
     b0e:	cf 91       	pop	r28
     b10:	08 95       	ret

00000b12 <ssd1306_draw_bmp>:
     b12:	6f 92       	push	r6
     b14:	7f 92       	push	r7
     b16:	8f 92       	push	r8
     b18:	9f 92       	push	r9
     b1a:	af 92       	push	r10
     b1c:	bf 92       	push	r11
     b1e:	cf 92       	push	r12
     b20:	df 92       	push	r13
     b22:	ef 92       	push	r14
     b24:	ff 92       	push	r15
     b26:	0f 93       	push	r16
     b28:	1f 93       	push	r17
     b2a:	cf 93       	push	r28
     b2c:	df 93       	push	r29
     b2e:	88 2e       	mov	r8, r24
     b30:	96 2e       	mov	r9, r22
     b32:	74 2e       	mov	r7, r20
     b34:	62 2e       	mov	r6, r18
     b36:	62 17       	cp	r22, r18
     b38:	10 f5       	brcc	.+68     	; 0xb7e <ssd1306_draw_bmp+0x6c>
     b3a:	c1 2c       	mov	r12, r1
     b3c:	d1 2c       	mov	r13, r1
     b3e:	aa 24       	eor	r10, r10
     b40:	aa 94       	dec	r10
     b42:	a4 0e       	add	r10, r20
     b44:	a8 1a       	sub	r10, r24
     b46:	b1 2c       	mov	r11, r1
     b48:	8f ef       	ldi	r24, 0xFF	; 255
     b4a:	a8 1a       	sub	r10, r24
     b4c:	b8 0a       	sbc	r11, r24
     b4e:	69 2d       	mov	r22, r9
     b50:	88 2d       	mov	r24, r8
     b52:	ca df       	rcall	.-108    	; 0xae8 <ssd1306_setpos>
     b54:	ad df       	rcall	.-166    	; 0xab0 <ssd1306_start_data>
     b56:	87 14       	cp	r8, r7
     b58:	78 f4       	brcc	.+30     	; 0xb78 <ssd1306_draw_bmp+0x66>
     b5a:	e8 01       	movw	r28, r16
     b5c:	cc 0d       	add	r28, r12
     b5e:	dd 1d       	adc	r29, r13
     b60:	ca 0c       	add	r12, r10
     b62:	db 1c       	adc	r13, r11
     b64:	78 01       	movw	r14, r16
     b66:	ec 0c       	add	r14, r12
     b68:	fd 1c       	adc	r15, r13
     b6a:	fe 01       	movw	r30, r28
     b6c:	84 91       	lpm	r24, Z
     b6e:	8f df       	rcall	.-226    	; 0xa8e <I2C_write>
     b70:	21 96       	adiw	r28, 0x01	; 1
     b72:	ce 15       	cp	r28, r14
     b74:	df 05       	cpc	r29, r15
     b76:	c9 f7       	brne	.-14     	; 0xb6a <ssd1306_draw_bmp+0x58>
     b78:	93 94       	inc	r9
     b7a:	96 14       	cp	r9, r6
     b7c:	40 f3       	brcs	.-48     	; 0xb4e <ssd1306_draw_bmp+0x3c>
     b7e:	df 91       	pop	r29
     b80:	cf 91       	pop	r28
     b82:	1f 91       	pop	r17
     b84:	0f 91       	pop	r16
     b86:	ff 90       	pop	r15
     b88:	ef 90       	pop	r14
     b8a:	df 90       	pop	r13
     b8c:	cf 90       	pop	r12
     b8e:	bf 90       	pop	r11
     b90:	af 90       	pop	r10
     b92:	9f 90       	pop	r9
     b94:	8f 90       	pop	r8
     b96:	7f 90       	pop	r7
     b98:	6f 90       	pop	r6
     b9a:	08 95       	ret

00000b9c <ssd1306_clear_display>:
     b9c:	cf 93       	push	r28
     b9e:	df 93       	push	r29
     ba0:	d0 e0       	ldi	r29, 0x00	; 0
     ba2:	6d 2f       	mov	r22, r29
     ba4:	80 e0       	ldi	r24, 0x00	; 0
     ba6:	a0 df       	rcall	.-192    	; 0xae8 <ssd1306_setpos>
     ba8:	83 df       	rcall	.-250    	; 0xab0 <ssd1306_start_data>
     baa:	c0 e8       	ldi	r28, 0x80	; 128
     bac:	80 e0       	ldi	r24, 0x00	; 0
     bae:	6f df       	rcall	.-290    	; 0xa8e <I2C_write>
     bb0:	c1 50       	subi	r28, 0x01	; 1
     bb2:	e1 f7       	brne	.-8      	; 0xbac <ssd1306_clear_display+0x10>
     bb4:	df 5f       	subi	r29, 0xFF	; 255
     bb6:	d8 30       	cpi	r29, 0x08	; 8
     bb8:	a1 f7       	brne	.-24     	; 0xba2 <ssd1306_clear_display+0x6>
     bba:	df 91       	pop	r29
     bbc:	cf 91       	pop	r28
     bbe:	08 95       	ret

00000bc0 <ssd1306tx_stringxy>:
     bc0:	8f 92       	push	r8
     bc2:	9f 92       	push	r9
     bc4:	af 92       	push	r10
     bc6:	bf 92       	push	r11
     bc8:	cf 92       	push	r12
     bca:	df 92       	push	r13
     bcc:	ef 92       	push	r14
     bce:	ff 92       	push	r15
     bd0:	0f 93       	push	r16
     bd2:	1f 93       	push	r17
     bd4:	cf 93       	push	r28
     bd6:	df 93       	push	r29
     bd8:	6c 01       	movw	r12, r24
     bda:	96 2e       	mov	r9, r22
     bdc:	84 2e       	mov	r8, r20
     bde:	f9 01       	movw	r30, r18
     be0:	a0 80       	ld	r10, Z
     be2:	aa 20       	and	r10, r10
     be4:	09 f4       	brne	.+2      	; 0xbe8 <ssd1306tx_stringxy+0x28>
     be6:	42 c0       	rjmp	.+132    	; 0xc6c <ssd1306tx_stringxy+0xac>
     be8:	79 01       	movw	r14, r18
     bea:	ff ef       	ldi	r31, 0xFF	; 255
     bec:	ef 1a       	sub	r14, r31
     bee:	ff 0a       	sbc	r15, r31
     bf0:	b1 2c       	mov	r11, r1
     bf2:	80 e2       	ldi	r24, 0x20	; 32
     bf4:	a8 1a       	sub	r10, r24
     bf6:	b1 08       	sbc	r11, r1
     bf8:	aa 0c       	add	r10, r10
     bfa:	bb 1c       	adc	r11, r11
     bfc:	aa 0c       	add	r10, r10
     bfe:	bb 1c       	adc	r11, r11
     c00:	aa 0c       	add	r10, r10
     c02:	bb 1c       	adc	r11, r11
     c04:	aa 0c       	add	r10, r10
     c06:	bb 1c       	adc	r11, r11
     c08:	e8 e7       	ldi	r30, 0x78	; 120
     c0a:	e9 15       	cp	r30, r9
     c0c:	10 f4       	brcc	.+4      	; 0xc12 <ssd1306tx_stringxy+0x52>
     c0e:	83 94       	inc	r8
     c10:	91 2c       	mov	r9, r1
     c12:	68 2d       	mov	r22, r8
     c14:	89 2d       	mov	r24, r9
     c16:	68 df       	rcall	.-304    	; 0xae8 <ssd1306_setpos>
     c18:	4b df       	rcall	.-362    	; 0xab0 <ssd1306_start_data>
     c1a:	86 01       	movw	r16, r12
     c1c:	0a 0d       	add	r16, r10
     c1e:	1b 1d       	adc	r17, r11
     c20:	e5 01       	movw	r28, r10
     c22:	28 96       	adiw	r28, 0x08	; 8
     c24:	cc 0d       	add	r28, r12
     c26:	dd 1d       	adc	r29, r13
     c28:	f8 01       	movw	r30, r16
     c2a:	84 91       	lpm	r24, Z
     c2c:	30 df       	rcall	.-416    	; 0xa8e <I2C_write>
     c2e:	0f 5f       	subi	r16, 0xFF	; 255
     c30:	1f 4f       	sbci	r17, 0xFF	; 255
     c32:	0c 17       	cp	r16, r28
     c34:	1d 07       	cpc	r17, r29
     c36:	c1 f7       	brne	.-16     	; 0xc28 <ssd1306tx_stringxy+0x68>
     c38:	21 df       	rcall	.-446    	; 0xa7c <I2C_stop>
     c3a:	61 e0       	ldi	r22, 0x01	; 1
     c3c:	68 0d       	add	r22, r8
     c3e:	89 2d       	mov	r24, r9
     c40:	53 df       	rcall	.-346    	; 0xae8 <ssd1306_setpos>
     c42:	36 df       	rcall	.-404    	; 0xab0 <ssd1306_start_data>
     c44:	85 01       	movw	r16, r10
     c46:	00 5f       	subi	r16, 0xF0	; 240
     c48:	1f 4f       	sbci	r17, 0xFF	; 255
     c4a:	0c 0d       	add	r16, r12
     c4c:	1d 1d       	adc	r17, r13
     c4e:	fe 01       	movw	r30, r28
     c50:	84 91       	lpm	r24, Z
     c52:	1d df       	rcall	.-454    	; 0xa8e <I2C_write>
     c54:	21 96       	adiw	r28, 0x01	; 1
     c56:	c0 17       	cp	r28, r16
     c58:	d1 07       	cpc	r29, r17
     c5a:	c9 f7       	brne	.-14     	; 0xc4e <ssd1306tx_stringxy+0x8e>
     c5c:	0f df       	rcall	.-482    	; 0xa7c <I2C_stop>
     c5e:	f8 e0       	ldi	r31, 0x08	; 8
     c60:	9f 0e       	add	r9, r31
     c62:	f7 01       	movw	r30, r14
     c64:	a1 90       	ld	r10, Z+
     c66:	7f 01       	movw	r14, r30
     c68:	a1 10       	cpse	r10, r1
     c6a:	c2 cf       	rjmp	.-124    	; 0xbf0 <ssd1306tx_stringxy+0x30>
     c6c:	df 91       	pop	r29
     c6e:	cf 91       	pop	r28
     c70:	1f 91       	pop	r17
     c72:	0f 91       	pop	r16
     c74:	ff 90       	pop	r15
     c76:	ef 90       	pop	r14
     c78:	df 90       	pop	r13
     c7a:	cf 90       	pop	r12
     c7c:	bf 90       	pop	r11
     c7e:	af 90       	pop	r10
     c80:	9f 90       	pop	r9
     c82:	8f 90       	pop	r8
     c84:	08 95       	ret

00000c86 <numberToCharArray>:
     c86:	00 97       	sbiw	r24, 0x00	; 0
     c88:	d9 f0       	breq	.+54     	; 0xcc0 <numberToCharArray+0x3a>
     c8a:	81 30       	cpi	r24, 0x01	; 1
     c8c:	91 05       	cpc	r25, r1
     c8e:	d9 f0       	breq	.+54     	; 0xcc6 <numberToCharArray+0x40>
     c90:	82 30       	cpi	r24, 0x02	; 2
     c92:	91 05       	cpc	r25, r1
     c94:	d9 f0       	breq	.+54     	; 0xccc <numberToCharArray+0x46>
     c96:	83 30       	cpi	r24, 0x03	; 3
     c98:	91 05       	cpc	r25, r1
     c9a:	d9 f0       	breq	.+54     	; 0xcd2 <numberToCharArray+0x4c>
     c9c:	84 30       	cpi	r24, 0x04	; 4
     c9e:	91 05       	cpc	r25, r1
     ca0:	d9 f0       	breq	.+54     	; 0xcd8 <numberToCharArray+0x52>
     ca2:	85 30       	cpi	r24, 0x05	; 5
     ca4:	91 05       	cpc	r25, r1
     ca6:	d9 f0       	breq	.+54     	; 0xcde <numberToCharArray+0x58>
     ca8:	86 30       	cpi	r24, 0x06	; 6
     caa:	91 05       	cpc	r25, r1
     cac:	d9 f0       	breq	.+54     	; 0xce4 <numberToCharArray+0x5e>
     cae:	87 30       	cpi	r24, 0x07	; 7
     cb0:	91 05       	cpc	r25, r1
     cb2:	d9 f0       	breq	.+54     	; 0xcea <numberToCharArray+0x64>
     cb4:	88 30       	cpi	r24, 0x08	; 8
     cb6:	91 05       	cpc	r25, r1
     cb8:	d9 f0       	breq	.+54     	; 0xcf0 <numberToCharArray+0x6a>
     cba:	09 97       	sbiw	r24, 0x09	; 9
     cbc:	e1 f0       	breq	.+56     	; 0xcf6 <numberToCharArray+0x70>
     cbe:	08 95       	ret
     cc0:	24 eb       	ldi	r18, 0xB4	; 180
     cc2:	33 e0       	ldi	r19, 0x03	; 3
     cc4:	1a c0       	rjmp	.+52     	; 0xcfa <numberToCharArray+0x74>
     cc6:	24 e5       	ldi	r18, 0x54	; 84
     cc8:	33 e0       	ldi	r19, 0x03	; 3
     cca:	17 c0       	rjmp	.+46     	; 0xcfa <numberToCharArray+0x74>
     ccc:	24 ef       	ldi	r18, 0xF4	; 244
     cce:	32 e0       	ldi	r19, 0x02	; 2
     cd0:	14 c0       	rjmp	.+40     	; 0xcfa <numberToCharArray+0x74>
     cd2:	24 e9       	ldi	r18, 0x94	; 148
     cd4:	32 e0       	ldi	r19, 0x02	; 2
     cd6:	11 c0       	rjmp	.+34     	; 0xcfa <numberToCharArray+0x74>
     cd8:	24 e3       	ldi	r18, 0x34	; 52
     cda:	32 e0       	ldi	r19, 0x02	; 2
     cdc:	0e c0       	rjmp	.+28     	; 0xcfa <numberToCharArray+0x74>
     cde:	24 ed       	ldi	r18, 0xD4	; 212
     ce0:	31 e0       	ldi	r19, 0x01	; 1
     ce2:	0b c0       	rjmp	.+22     	; 0xcfa <numberToCharArray+0x74>
     ce4:	24 e7       	ldi	r18, 0x74	; 116
     ce6:	31 e0       	ldi	r19, 0x01	; 1
     ce8:	08 c0       	rjmp	.+16     	; 0xcfa <numberToCharArray+0x74>
     cea:	24 e1       	ldi	r18, 0x14	; 20
     cec:	31 e0       	ldi	r19, 0x01	; 1
     cee:	05 c0       	rjmp	.+10     	; 0xcfa <numberToCharArray+0x74>
     cf0:	24 eb       	ldi	r18, 0xB4	; 180
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	02 c0       	rjmp	.+4      	; 0xcfa <numberToCharArray+0x74>
     cf6:	24 e5       	ldi	r18, 0x54	; 84
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	82 2f       	mov	r24, r18
     cfc:	93 2f       	mov	r25, r19
     cfe:	08 95       	ret

00000d00 <draw_number>:

void draw_number(int xstart, int ystart, int number)
{
     d00:	cf 92       	push	r12
     d02:	df 92       	push	r13
     d04:	ef 92       	push	r14
     d06:	ff 92       	push	r15
     d08:	0f 93       	push	r16
     d0a:	1f 93       	push	r17
     d0c:	cf 93       	push	r28
     d0e:	df 93       	push	r29
     d10:	c8 2f       	mov	r28, r24
     d12:	d6 2f       	mov	r29, r22
     d14:	7a 01       	movw	r14, r20
	
	if(number < 9) 
     d16:	49 30       	cpi	r20, 0x09	; 9
     d18:	51 05       	cpc	r21, r1
     d1a:	cc f4       	brge	.+50     	; 0xd4e <draw_number+0x4e>
	{
		ssd1306_draw_bmp(xstart, ystart, xstart+24, ystart+4, number0);
     d1c:	68 94       	set
     d1e:	cc 24       	eor	r12, r12
     d20:	c2 f8       	bld	r12, 2
     d22:	c6 0e       	add	r12, r22
     d24:	0f 2e       	mov	r0, r31
     d26:	f8 e1       	ldi	r31, 0x18	; 24
     d28:	df 2e       	mov	r13, r31
     d2a:	f0 2d       	mov	r31, r0
     d2c:	dc 0e       	add	r13, r28
     d2e:	04 eb       	ldi	r16, 0xB4	; 180
     d30:	13 e0       	ldi	r17, 0x03	; 3
     d32:	2c 2d       	mov	r18, r12
     d34:	4d 2d       	mov	r20, r13
     d36:	8c 2f       	mov	r24, r28
     d38:	ec de       	rcall	.-552    	; 0xb12 <ssd1306_draw_bmp>
		ssd1306_draw_bmp(xstart+ 24,ystart, xstart+48, ystart+4, numberToCharArray(number));
     d3a:	c7 01       	movw	r24, r14
     d3c:	a4 df       	rcall	.-184    	; 0xc86 <numberToCharArray>
     d3e:	40 e3       	ldi	r20, 0x30	; 48
     d40:	4c 0f       	add	r20, r28
     d42:	8c 01       	movw	r16, r24
     d44:	2c 2d       	mov	r18, r12
     d46:	6d 2f       	mov	r22, r29
     d48:	8d 2d       	mov	r24, r13
     d4a:	e3 de       	rcall	.-570    	; 0xb12 <ssd1306_draw_bmp>
     d4c:	22 c0       	rjmp	.+68     	; 0xd92 <draw_number+0x92>
	}
	else if(number < 99) 
     d4e:	43 36       	cpi	r20, 0x63	; 99
     d50:	51 05       	cpc	r21, r1
     d52:	fc f4       	brge	.+62     	; 0xd92 <draw_number+0x92>
	{
		int first = number/10;
		int second = number%10;
		
		ssd1306_draw_bmp(xstart, ystart, xstart+24, ystart+4, numberToCharArray(first));
     d54:	ca 01       	movw	r24, r20
     d56:	6a e0       	ldi	r22, 0x0A	; 10
     d58:	70 e0       	ldi	r23, 0x00	; 0
     d5a:	9d d2       	rcall	.+1338   	; 0x1296 <__divmodhi4>
     d5c:	6c 01       	movw	r12, r24
     d5e:	cb 01       	movw	r24, r22
     d60:	92 df       	rcall	.-220    	; 0xc86 <numberToCharArray>
     d62:	68 94       	set
     d64:	ee 24       	eor	r14, r14
     d66:	e2 f8       	bld	r14, 2
     d68:	ed 0e       	add	r14, r29
     d6a:	0f 2e       	mov	r0, r31
     d6c:	f8 e1       	ldi	r31, 0x18	; 24
     d6e:	ff 2e       	mov	r15, r31
     d70:	f0 2d       	mov	r31, r0
     d72:	fc 0e       	add	r15, r28
     d74:	8c 01       	movw	r16, r24
     d76:	2e 2d       	mov	r18, r14
     d78:	4f 2d       	mov	r20, r15
     d7a:	6d 2f       	mov	r22, r29
     d7c:	8c 2f       	mov	r24, r28
     d7e:	c9 de       	rcall	.-622    	; 0xb12 <ssd1306_draw_bmp>
		ssd1306_draw_bmp(xstart+ 24,ystart, xstart+48, ystart+4, numberToCharArray(second));
     d80:	c6 01       	movw	r24, r12
     d82:	81 df       	rcall	.-254    	; 0xc86 <numberToCharArray>
     d84:	40 e3       	ldi	r20, 0x30	; 48
     d86:	4c 0f       	add	r20, r28
     d88:	8c 01       	movw	r16, r24
     d8a:	2e 2d       	mov	r18, r14
     d8c:	6d 2f       	mov	r22, r29
     d8e:	8f 2d       	mov	r24, r15
     d90:	c0 de       	rcall	.-640    	; 0xb12 <ssd1306_draw_bmp>
	}
	
	else return;
}
     d92:	df 91       	pop	r29
     d94:	cf 91       	pop	r28
     d96:	1f 91       	pop	r17
     d98:	0f 91       	pop	r16
     d9a:	ff 90       	pop	r15
     d9c:	ef 90       	pop	r14
     d9e:	df 90       	pop	r13
     da0:	cf 90       	pop	r12
     da2:	08 95       	ret

00000da4 <display_air_humidity>:

void display_air_humidity()
{
     da4:	0f 93       	push	r16
     da6:	1f 93       	push	r17
	ssd1306_draw_bmp(0,0, 24,4, number3);
     da8:	04 e9       	ldi	r16, 0x94	; 148
     daa:	12 e0       	ldi	r17, 0x02	; 2
     dac:	24 e0       	ldi	r18, 0x04	; 4
     dae:	48 e1       	ldi	r20, 0x18	; 24
     db0:	60 e0       	ldi	r22, 0x00	; 0
     db2:	80 e0       	ldi	r24, 0x00	; 0
     db4:	ae de       	rcall	.-676    	; 0xb12 <ssd1306_draw_bmp>
}
     db6:	1f 91       	pop	r17
     db8:	0f 91       	pop	r16
     dba:	08 95       	ret

00000dbc <display_temperature>:

void display_temperature()
{
     dbc:	0f 93       	push	r16
     dbe:	1f 93       	push	r17
	ssd1306_draw_bmp(0,0, 24,4, number2);
     dc0:	04 ef       	ldi	r16, 0xF4	; 244
     dc2:	12 e0       	ldi	r17, 0x02	; 2
     dc4:	24 e0       	ldi	r18, 0x04	; 4
     dc6:	48 e1       	ldi	r20, 0x18	; 24
     dc8:	60 e0       	ldi	r22, 0x00	; 0
     dca:	80 e0       	ldi	r24, 0x00	; 0
     dcc:	a2 de       	rcall	.-700    	; 0xb12 <ssd1306_draw_bmp>
}
     dce:	1f 91       	pop	r17
     dd0:	0f 91       	pop	r16
     dd2:	08 95       	ret

00000dd4 <display_timer_set>:

void display_timer_set() 
{
		ssd1306tx_stringxy(ssd1306xled_font8x16data, 0, 0, "S");
     dd4:	23 e0       	ldi	r18, 0x03	; 3
     dd6:	31 e0       	ldi	r19, 0x01	; 1
     dd8:	40 e0       	ldi	r20, 0x00	; 0
     dda:	60 e0       	ldi	r22, 0x00	; 0
     ddc:	84 e1       	ldi	r24, 0x14	; 20
     dde:	94 e0       	ldi	r25, 0x04	; 4
     de0:	ef de       	rcall	.-546    	; 0xbc0 <ssd1306tx_stringxy>
		ssd1306tx_stringxy(ssd1306xled_font8x16data, 8, 0, "E");
     de2:	25 e0       	ldi	r18, 0x05	; 5
     de4:	31 e0       	ldi	r19, 0x01	; 1
     de6:	40 e0       	ldi	r20, 0x00	; 0
     de8:	68 e0       	ldi	r22, 0x08	; 8
     dea:	84 e1       	ldi	r24, 0x14	; 20
     dec:	94 e0       	ldi	r25, 0x04	; 4
     dee:	e8 de       	rcall	.-560    	; 0xbc0 <ssd1306tx_stringxy>
		ssd1306tx_stringxy(ssd1306xled_font8x16data, 16, 0, "T");
     df0:	27 e0       	ldi	r18, 0x07	; 7
     df2:	31 e0       	ldi	r19, 0x01	; 1
     df4:	40 e0       	ldi	r20, 0x00	; 0
     df6:	60 e1       	ldi	r22, 0x10	; 16
     df8:	84 e1       	ldi	r24, 0x14	; 20
     dfa:	94 e0       	ldi	r25, 0x04	; 4
     dfc:	e1 de       	rcall	.-574    	; 0xbc0 <ssd1306tx_stringxy>
		ssd1306tx_stringxy(ssd1306xled_font8x16data, 24, 0, " ");
     dfe:	29 e0       	ldi	r18, 0x09	; 9
     e00:	31 e0       	ldi	r19, 0x01	; 1
     e02:	40 e0       	ldi	r20, 0x00	; 0
     e04:	68 e1       	ldi	r22, 0x18	; 24
     e06:	84 e1       	ldi	r24, 0x14	; 20
     e08:	94 e0       	ldi	r25, 0x04	; 4
     e0a:	da de       	rcall	.-588    	; 0xbc0 <ssd1306tx_stringxy>
		ssd1306tx_stringxy(ssd1306xled_font8x16data, 32, 0, "T");
     e0c:	27 e0       	ldi	r18, 0x07	; 7
     e0e:	31 e0       	ldi	r19, 0x01	; 1
     e10:	40 e0       	ldi	r20, 0x00	; 0
     e12:	60 e2       	ldi	r22, 0x20	; 32
     e14:	84 e1       	ldi	r24, 0x14	; 20
     e16:	94 e0       	ldi	r25, 0x04	; 4
     e18:	d3 de       	rcall	.-602    	; 0xbc0 <ssd1306tx_stringxy>
		ssd1306tx_stringxy(ssd1306xled_font8x16data, 40, 0, "I");
     e1a:	2b e0       	ldi	r18, 0x0B	; 11
     e1c:	31 e0       	ldi	r19, 0x01	; 1
     e1e:	40 e0       	ldi	r20, 0x00	; 0
     e20:	68 e2       	ldi	r22, 0x28	; 40
     e22:	84 e1       	ldi	r24, 0x14	; 20
     e24:	94 e0       	ldi	r25, 0x04	; 4
     e26:	cc de       	rcall	.-616    	; 0xbc0 <ssd1306tx_stringxy>
		ssd1306tx_stringxy(ssd1306xled_font8x16data, 48, 0, "M");
     e28:	2d e0       	ldi	r18, 0x0D	; 13
     e2a:	31 e0       	ldi	r19, 0x01	; 1
     e2c:	40 e0       	ldi	r20, 0x00	; 0
     e2e:	60 e3       	ldi	r22, 0x30	; 48
     e30:	84 e1       	ldi	r24, 0x14	; 20
     e32:	94 e0       	ldi	r25, 0x04	; 4
     e34:	c5 de       	rcall	.-630    	; 0xbc0 <ssd1306tx_stringxy>
		ssd1306tx_stringxy(ssd1306xled_font8x16data, 56, 0, "E");
     e36:	25 e0       	ldi	r18, 0x05	; 5
     e38:	31 e0       	ldi	r19, 0x01	; 1
     e3a:	40 e0       	ldi	r20, 0x00	; 0
     e3c:	68 e3       	ldi	r22, 0x38	; 56
     e3e:	84 e1       	ldi	r24, 0x14	; 20
     e40:	94 e0       	ldi	r25, 0x04	; 4
     e42:	be de       	rcall	.-644    	; 0xbc0 <ssd1306tx_stringxy>
		ssd1306tx_stringxy(ssd1306xled_font8x16data, 64, 0, "R");
     e44:	2f e0       	ldi	r18, 0x0F	; 15
     e46:	31 e0       	ldi	r19, 0x01	; 1
     e48:	40 e0       	ldi	r20, 0x00	; 0
     e4a:	60 e4       	ldi	r22, 0x40	; 64
     e4c:	84 e1       	ldi	r24, 0x14	; 20
     e4e:	94 e0       	ldi	r25, 0x04	; 4
     e50:	b7 de       	rcall	.-658    	; 0xbc0 <ssd1306tx_stringxy>
     e52:	08 95       	ret

00000e54 <display_timer>:
}

void display_timer() 
{
	draw_number(0,0,0);
     e54:	40 e0       	ldi	r20, 0x00	; 0
     e56:	50 e0       	ldi	r21, 0x00	; 0
     e58:	60 e0       	ldi	r22, 0x00	; 0
     e5a:	70 e0       	ldi	r23, 0x00	; 0
     e5c:	80 e0       	ldi	r24, 0x00	; 0
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	4f df       	rcall	.-354    	; 0xd00 <draw_number>
	ssd1306tx_stringxy(ssd1306xled_font8x16data, 48, 1, ":");
     e62:	21 e1       	ldi	r18, 0x11	; 17
     e64:	31 e0       	ldi	r19, 0x01	; 1
     e66:	41 e0       	ldi	r20, 0x01	; 1
     e68:	60 e3       	ldi	r22, 0x30	; 48
     e6a:	84 e1       	ldi	r24, 0x14	; 20
     e6c:	94 e0       	ldi	r25, 0x04	; 4
     e6e:	a8 de       	rcall	.-688    	; 0xbc0 <ssd1306tx_stringxy>
	draw_number(60,0,0);
     e70:	40 e0       	ldi	r20, 0x00	; 0
     e72:	50 e0       	ldi	r21, 0x00	; 0
     e74:	60 e0       	ldi	r22, 0x00	; 0
     e76:	70 e0       	ldi	r23, 0x00	; 0
     e78:	8c e3       	ldi	r24, 0x3C	; 60
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	41 df       	rcall	.-382    	; 0xd00 <draw_number>
     e7e:	08 95       	ret

00000e80 <display_clock_set>:
}

void display_clock_set() 
{
	ssd1306tx_stringxy(ssd1306xled_font8x16data, 0, 0, "S");
     e80:	23 e0       	ldi	r18, 0x03	; 3
     e82:	31 e0       	ldi	r19, 0x01	; 1
     e84:	40 e0       	ldi	r20, 0x00	; 0
     e86:	60 e0       	ldi	r22, 0x00	; 0
     e88:	84 e1       	ldi	r24, 0x14	; 20
     e8a:	94 e0       	ldi	r25, 0x04	; 4
     e8c:	99 de       	rcall	.-718    	; 0xbc0 <ssd1306tx_stringxy>
	ssd1306tx_stringxy(ssd1306xled_font8x16data, 8, 0, "E");
     e8e:	25 e0       	ldi	r18, 0x05	; 5
     e90:	31 e0       	ldi	r19, 0x01	; 1
     e92:	40 e0       	ldi	r20, 0x00	; 0
     e94:	68 e0       	ldi	r22, 0x08	; 8
     e96:	84 e1       	ldi	r24, 0x14	; 20
     e98:	94 e0       	ldi	r25, 0x04	; 4
     e9a:	92 de       	rcall	.-732    	; 0xbc0 <ssd1306tx_stringxy>
	ssd1306tx_stringxy(ssd1306xled_font8x16data, 16, 0, "T");
     e9c:	27 e0       	ldi	r18, 0x07	; 7
     e9e:	31 e0       	ldi	r19, 0x01	; 1
     ea0:	40 e0       	ldi	r20, 0x00	; 0
     ea2:	60 e1       	ldi	r22, 0x10	; 16
     ea4:	84 e1       	ldi	r24, 0x14	; 20
     ea6:	94 e0       	ldi	r25, 0x04	; 4
     ea8:	8b de       	rcall	.-746    	; 0xbc0 <ssd1306tx_stringxy>
	ssd1306tx_stringxy(ssd1306xled_font8x16data, 24, 0, " ");
     eaa:	29 e0       	ldi	r18, 0x09	; 9
     eac:	31 e0       	ldi	r19, 0x01	; 1
     eae:	40 e0       	ldi	r20, 0x00	; 0
     eb0:	68 e1       	ldi	r22, 0x18	; 24
     eb2:	84 e1       	ldi	r24, 0x14	; 20
     eb4:	94 e0       	ldi	r25, 0x04	; 4
     eb6:	84 de       	rcall	.-760    	; 0xbc0 <ssd1306tx_stringxy>
	ssd1306tx_stringxy(ssd1306xled_font8x16data, 32, 0, "C");
     eb8:	23 e1       	ldi	r18, 0x13	; 19
     eba:	31 e0       	ldi	r19, 0x01	; 1
     ebc:	40 e0       	ldi	r20, 0x00	; 0
     ebe:	60 e2       	ldi	r22, 0x20	; 32
     ec0:	84 e1       	ldi	r24, 0x14	; 20
     ec2:	94 e0       	ldi	r25, 0x04	; 4
     ec4:	7d de       	rcall	.-774    	; 0xbc0 <ssd1306tx_stringxy>
	ssd1306tx_stringxy(ssd1306xled_font8x16data, 40, 0, "L");
     ec6:	25 e1       	ldi	r18, 0x15	; 21
     ec8:	31 e0       	ldi	r19, 0x01	; 1
     eca:	40 e0       	ldi	r20, 0x00	; 0
     ecc:	68 e2       	ldi	r22, 0x28	; 40
     ece:	84 e1       	ldi	r24, 0x14	; 20
     ed0:	94 e0       	ldi	r25, 0x04	; 4
     ed2:	76 de       	rcall	.-788    	; 0xbc0 <ssd1306tx_stringxy>
	ssd1306tx_stringxy(ssd1306xled_font8x16data, 48, 0, "O");
     ed4:	27 e1       	ldi	r18, 0x17	; 23
     ed6:	31 e0       	ldi	r19, 0x01	; 1
     ed8:	40 e0       	ldi	r20, 0x00	; 0
     eda:	60 e3       	ldi	r22, 0x30	; 48
     edc:	84 e1       	ldi	r24, 0x14	; 20
     ede:	94 e0       	ldi	r25, 0x04	; 4
     ee0:	6f de       	rcall	.-802    	; 0xbc0 <ssd1306tx_stringxy>
	ssd1306tx_stringxy(ssd1306xled_font8x16data, 56, 0, "C");
     ee2:	23 e1       	ldi	r18, 0x13	; 19
     ee4:	31 e0       	ldi	r19, 0x01	; 1
     ee6:	40 e0       	ldi	r20, 0x00	; 0
     ee8:	68 e3       	ldi	r22, 0x38	; 56
     eea:	84 e1       	ldi	r24, 0x14	; 20
     eec:	94 e0       	ldi	r25, 0x04	; 4
     eee:	68 de       	rcall	.-816    	; 0xbc0 <ssd1306tx_stringxy>
	ssd1306tx_stringxy(ssd1306xled_font8x16data, 64, 0, "K");
     ef0:	29 e1       	ldi	r18, 0x19	; 25
     ef2:	31 e0       	ldi	r19, 0x01	; 1
     ef4:	40 e0       	ldi	r20, 0x00	; 0
     ef6:	60 e4       	ldi	r22, 0x40	; 64
     ef8:	84 e1       	ldi	r24, 0x14	; 20
     efa:	94 e0       	ldi	r25, 0x04	; 4
     efc:	61 de       	rcall	.-830    	; 0xbc0 <ssd1306tx_stringxy>

	draw_number(0,2,selected_hour);
     efe:	40 91 01 01 	lds	r20, 0x0101	; 0x800101 <selected_hour>
     f02:	50 e0       	ldi	r21, 0x00	; 0
     f04:	62 e0       	ldi	r22, 0x02	; 2
     f06:	70 e0       	ldi	r23, 0x00	; 0
     f08:	80 e0       	ldi	r24, 0x00	; 0
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	f9 de       	rcall	.-526    	; 0xd00 <draw_number>
	ssd1306tx_stringxy(ssd1306xled_font8x16data, 48, 3, ":");
     f0e:	21 e1       	ldi	r18, 0x11	; 17
     f10:	31 e0       	ldi	r19, 0x01	; 1
     f12:	43 e0       	ldi	r20, 0x03	; 3
     f14:	60 e3       	ldi	r22, 0x30	; 48
     f16:	84 e1       	ldi	r24, 0x14	; 20
     f18:	94 e0       	ldi	r25, 0x04	; 4
     f1a:	52 de       	rcall	.-860    	; 0xbc0 <ssd1306tx_stringxy>
	draw_number(60,2,selected_minute);
     f1c:	40 91 1d 01 	lds	r20, 0x011D	; 0x80011d <selected_minute>
     f20:	50 e0       	ldi	r21, 0x00	; 0
     f22:	62 e0       	ldi	r22, 0x02	; 2
     f24:	70 e0       	ldi	r23, 0x00	; 0
     f26:	8c e3       	ldi	r24, 0x3C	; 60
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	ea de       	rcall	.-556    	; 0xd00 <draw_number>
     f2c:	08 95       	ret

00000f2e <display_clock>:
}

void display_clock() 
{
	draw_number(0,0,hour);
     f2e:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <hour>
     f32:	50 e0       	ldi	r21, 0x00	; 0
     f34:	60 e0       	ldi	r22, 0x00	; 0
     f36:	70 e0       	ldi	r23, 0x00	; 0
     f38:	80 e0       	ldi	r24, 0x00	; 0
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	e1 de       	rcall	.-574    	; 0xd00 <draw_number>
	ssd1306tx_stringxy(ssd1306xled_font8x16data, 48, 1, ":");
     f3e:	21 e1       	ldi	r18, 0x11	; 17
     f40:	31 e0       	ldi	r19, 0x01	; 1
     f42:	41 e0       	ldi	r20, 0x01	; 1
     f44:	60 e3       	ldi	r22, 0x30	; 48
     f46:	84 e1       	ldi	r24, 0x14	; 20
     f48:	94 e0       	ldi	r25, 0x04	; 4
     f4a:	3a de       	rcall	.-908    	; 0xbc0 <ssd1306tx_stringxy>
	draw_number(60,0,minute);
     f4c:	40 91 1f 01 	lds	r20, 0x011F	; 0x80011f <minute>
     f50:	50 e0       	ldi	r21, 0x00	; 0
     f52:	60 e0       	ldi	r22, 0x00	; 0
     f54:	70 e0       	ldi	r23, 0x00	; 0
     f56:	8c e3       	ldi	r24, 0x3C	; 60
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	d2 de       	rcall	.-604    	; 0xd00 <draw_number>
	draw_number(60,4,second);
     f5c:	40 91 1e 01 	lds	r20, 0x011E	; 0x80011e <second>
     f60:	50 e0       	ldi	r21, 0x00	; 0
     f62:	64 e0       	ldi	r22, 0x04	; 4
     f64:	70 e0       	ldi	r23, 0x00	; 0
     f66:	8c e3       	ldi	r24, 0x3C	; 60
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	ca de       	rcall	.-620    	; 0xd00 <draw_number>
     f6c:	08 95       	ret

00000f6e <run>:
}

void run()
{	
	if(selected_menu == MENU_HUMIDITY) display_air_humidity();
     f6e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f72:	8c 33       	cpi	r24, 0x3C	; 60
     f74:	11 f4       	brne	.+4      	; 0xf7a <run+0xc>
     f76:	16 df       	rcall	.-468    	; 0xda4 <display_air_humidity>
     f78:	08 95       	ret
	else if(selected_menu == MENU_TEMPEREATURE) display_temperature();
     f7a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f7e:	82 33       	cpi	r24, 0x32	; 50
     f80:	11 f4       	brne	.+4      	; 0xf86 <run+0x18>
     f82:	1c df       	rcall	.-456    	; 0xdbc <display_temperature>
     f84:	08 95       	ret
	else if(selected_menu == MENU_TIMER) display_timer();
     f86:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f8a:	8e 31       	cpi	r24, 0x1E	; 30
     f8c:	11 f4       	brne	.+4      	; 0xf92 <run+0x24>
     f8e:	62 df       	rcall	.-316    	; 0xe54 <display_timer>
     f90:	08 95       	ret
	else if(selected_menu == MENU_TIMER_SET_HOUR || selected_menu == MENU_TIMER_SET_MINUTE) display_timer_set();
     f92:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f96:	88 32       	cpi	r24, 0x28	; 40
     f98:	21 f0       	breq	.+8      	; 0xfa2 <run+0x34>
     f9a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     f9e:	89 32       	cpi	r24, 0x29	; 41
     fa0:	11 f4       	brne	.+4      	; 0xfa6 <run+0x38>
     fa2:	18 df       	rcall	.-464    	; 0xdd4 <display_timer_set>
     fa4:	08 95       	ret
	else if(selected_menu == MENU_CLOCK) display_clock();
     fa6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     faa:	81 30       	cpi	r24, 0x01	; 1
     fac:	11 f4       	brne	.+4      	; 0xfb2 <run+0x44>
     fae:	bf df       	rcall	.-130    	; 0xf2e <display_clock>
     fb0:	08 95       	ret
	else if(selected_menu == MENU_CLOCK_SET_HOUR || selected_menu == MENU_CLOCK_SET_MINUTE) display_clock_set();
     fb2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     fb6:	84 31       	cpi	r24, 0x14	; 20
     fb8:	21 f0       	breq	.+8      	; 0xfc2 <run+0x54>
     fba:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     fbe:	85 31       	cpi	r24, 0x15	; 21
     fc0:	09 f4       	brne	.+2      	; 0xfc4 <run+0x56>
     fc2:	5e df       	rcall	.-324    	; 0xe80 <display_clock_set>
     fc4:	08 95       	ret

00000fc6 <switch_menu>:
}

void switch_menu(int number)
{
     fc6:	cf 93       	push	r28
     fc8:	c8 2f       	mov	r28, r24
	ssd1306_clear_display();
     fca:	e8 dd       	rcall	.-1072   	; 0xb9c <ssd1306_clear_display>
	selected_menu = number;
     fcc:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__data_start>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     fd0:	2f e7       	ldi	r18, 0x7F	; 127
     fd2:	8a e1       	ldi	r24, 0x1A	; 26
     fd4:	96 e0       	ldi	r25, 0x06	; 6
     fd6:	21 50       	subi	r18, 0x01	; 1
     fd8:	80 40       	sbci	r24, 0x00	; 0
     fda:	90 40       	sbci	r25, 0x00	; 0
     fdc:	e1 f7       	brne	.-8      	; 0xfd6 <switch_menu+0x10>
     fde:	00 c0       	rjmp	.+0      	; 0xfe0 <switch_menu+0x1a>
     fe0:	00 00       	nop
	_delay_ms(250);
}
     fe2:	cf 91       	pop	r28
     fe4:	08 95       	ret

00000fe6 <port_init>:
{
	
	//DDRD |= LED1;
	//DDRB |= LED2;
	
	DDRC &= ~(BUTTON_2 | BUTTON_1);
     fe6:	87 b1       	in	r24, 0x07	; 7
     fe8:	83 7f       	andi	r24, 0xF3	; 243
     fea:	87 b9       	out	0x07, r24	; 7
	DDRB &= ~(BUTTON_4 | BUTTON_3);
     fec:	84 b1       	in	r24, 0x04	; 4
     fee:	89 7f       	andi	r24, 0xF9	; 249
     ff0:	84 b9       	out	0x04, r24	; 4
	
	TCCR1B = (1<<CS12) | (1<<WGM12);
     ff2:	8c e0       	ldi	r24, 0x0C	; 12
     ff4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
	OCR1AH = 0x7A;
     ff8:	8a e7       	ldi	r24, 0x7A	; 122
     ffa:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
	OCR1AL = 0x12;
     ffe:	82 e1       	ldi	r24, 0x12	; 18
    1000:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	TIMSK1 |= (1<<ICIE1) | (1<<OCIE1A);
    1004:	ef e6       	ldi	r30, 0x6F	; 111
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	80 81       	ld	r24, Z
    100a:	82 62       	ori	r24, 0x22	; 34
    100c:	80 83       	st	Z, r24
    100e:	08 95       	ret

00001010 <display_init>:
}

void display_init()
{
	I2C_Initialize(100);
    1010:	84 e6       	ldi	r24, 0x64	; 100
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	13 dd       	rcall	.-1498   	; 0xa3c <I2C_Initialize>
	I2COutBuffer = 0;
    1016:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <I2COutBuffer>
	ssd1306_init();
    101a:	50 dd       	rcall	.-1376   	; 0xabc <ssd1306_init>
		}
	}
}

void ssd1306tx_init(const uint8_t *fron_src, uint8_t char_base) {
	ssd1306tx_font_src = fron_src;
    101c:	84 e1       	ldi	r24, 0x14	; 20
    101e:	94 e0       	ldi	r25, 0x04	; 4
    1020:	90 93 22 01 	sts	0x0122, r25	; 0x800122 <ssd1306tx_font_src+0x1>
    1024:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <ssd1306tx_font_src>
	ssd1306tx_font_char_base = char_base;
    1028:	80 e2       	ldi	r24, 0x20	; 32
    102a:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <ssd1306tx_font_char_base>
{
	I2C_Initialize(100);
	I2COutBuffer = 0;
	ssd1306_init();
	ssd1306tx_init(ssd1306xled_font8x16data, ' ');
	ssd1306_start_command();
    102e:	3a dd       	rcall	.-1420   	; 0xaa4 <ssd1306_start_command>
	I2C_write(0xA6);
    1030:	86 ea       	ldi	r24, 0xA6	; 166
    1032:	2d dd       	rcall	.-1446   	; 0xa8e <I2C_write>
void ssd1306_data_byte(uint8_t b) {
	I2C_write(b);
}

void ssd1306_stop(void) {
	I2C_stop();
    1034:	23 dd       	rcall	.-1466   	; 0xa7c <I2C_stop>
	ssd1306_init();
	ssd1306tx_init(ssd1306xled_font8x16data, ' ');
	ssd1306_start_command();
	I2C_write(0xA6);
	ssd1306_stop();
	ssd1306_clear_display();
    1036:	b2 dd       	rcall	.-1180   	; 0xb9c <ssd1306_clear_display>
    1038:	08 95       	ret

0000103a <main>:
}

int main(void)
{
	sei();
    103a:	78 94       	sei
	port_init();
    103c:	d4 df       	rcall	.-88     	; 0xfe6 <port_init>
	display_init();
    103e:	e8 df       	rcall	.-48     	; 0x1010 <display_init>
			{
				switch_menu(MENU_CLOCK_SET_HOUR);
				_delay_ms(200);
			};
		}
		else if (selected_menu = MENU_TIMER_SET_HOUR)
    1040:	c8 e2       	ldi	r28, 0x28	; 40
{
	number++;
	
	if(number > max)
	{
		 number = 0;
    1042:	10 e0       	ldi	r17, 0x00	; 0
    1044:	d0 e0       	ldi	r29, 0x00	; 0
{
	number--;
	
	if(number < 0)
	{ 
		number = max;
    1046:	0f 2e       	mov	r0, r31
    1048:	f8 e1       	ldi	r31, 0x18	; 24
    104a:	ff 2e       	mov	r15, r31
    104c:	f0 2d       	mov	r31, r0
    104e:	00 e0       	ldi	r16, 0x00	; 0
	port_init();
	display_init();

	while (1)
	{
		if(selected_menu == MENU_CLOCK || selected_menu == MENU_TIMER || selected_menu == MENU_TEMPEREATURE || selected_menu == MENU_HUMIDITY)
    1050:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1054:	81 30       	cpi	r24, 0x01	; 1
    1056:	61 f0       	breq	.+24     	; 0x1070 <main+0x36>
    1058:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    105c:	8e 31       	cpi	r24, 0x1E	; 30
    105e:	41 f0       	breq	.+16     	; 0x1070 <main+0x36>
    1060:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1064:	82 33       	cpi	r24, 0x32	; 50
    1066:	21 f0       	breq	.+8      	; 0x1070 <main+0x36>
    1068:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    106c:	8c 33       	cpi	r24, 0x3C	; 60
    106e:	61 f5       	brne	.+88     	; 0x10c8 <main+0x8e>
		{
			if(BUTTON_1_PRESSED && selected_menu == MENU_CLOCK) switch_menu(MENU_CLOCK_SET_HOUR);
    1070:	33 99       	sbic	0x06, 3	; 6
    1072:	08 c0       	rjmp	.+16     	; 0x1084 <main+0x4a>
    1074:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1078:	81 30       	cpi	r24, 0x01	; 1
    107a:	21 f4       	brne	.+8      	; 0x1084 <main+0x4a>
    107c:	84 e1       	ldi	r24, 0x14	; 20
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	a2 df       	rcall	.-188    	; 0xfc6 <switch_menu>
    1082:	d7 c0       	rjmp	.+430    	; 0x1232 <main+0x1f8>
			else if(BUTTON_1_PRESSED) switch_menu(MENU_CLOCK);
    1084:	33 99       	sbic	0x06, 3	; 6
    1086:	04 c0       	rjmp	.+8      	; 0x1090 <main+0x56>
    1088:	81 e0       	ldi	r24, 0x01	; 1
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	9c df       	rcall	.-200    	; 0xfc6 <switch_menu>
    108e:	d1 c0       	rjmp	.+418    	; 0x1232 <main+0x1f8>
			else if(BUTTON_2_PRESSED && selected_menu == MENU_TIMER) switch_menu(MENU_TIMER_SET_HOUR);
    1090:	32 99       	sbic	0x06, 2	; 6
    1092:	08 c0       	rjmp	.+16     	; 0x10a4 <main+0x6a>
    1094:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1098:	8e 31       	cpi	r24, 0x1E	; 30
    109a:	21 f4       	brne	.+8      	; 0x10a4 <main+0x6a>
    109c:	88 e2       	ldi	r24, 0x28	; 40
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	92 df       	rcall	.-220    	; 0xfc6 <switch_menu>
    10a2:	c7 c0       	rjmp	.+398    	; 0x1232 <main+0x1f8>
			else if(BUTTON_2_PRESSED) switch_menu(MENU_TIMER);
    10a4:	32 99       	sbic	0x06, 2	; 6
    10a6:	04 c0       	rjmp	.+8      	; 0x10b0 <main+0x76>
    10a8:	8e e1       	ldi	r24, 0x1E	; 30
    10aa:	90 e0       	ldi	r25, 0x00	; 0
    10ac:	8c df       	rcall	.-232    	; 0xfc6 <switch_menu>
    10ae:	c1 c0       	rjmp	.+386    	; 0x1232 <main+0x1f8>
			else if(BUTTON_3_PRESSED) switch_menu(MENU_TEMPEREATURE);
    10b0:	1a 99       	sbic	0x03, 2	; 3
    10b2:	04 c0       	rjmp	.+8      	; 0x10bc <main+0x82>
    10b4:	82 e3       	ldi	r24, 0x32	; 50
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	86 df       	rcall	.-244    	; 0xfc6 <switch_menu>
    10ba:	bb c0       	rjmp	.+374    	; 0x1232 <main+0x1f8>
			else if(BUTTON_4_PRESSED) switch_menu(MENU_HUMIDITY);
    10bc:	19 99       	sbic	0x03, 1	; 3
    10be:	b9 c0       	rjmp	.+370    	; 0x1232 <main+0x1f8>
    10c0:	8c e3       	ldi	r24, 0x3C	; 60
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	80 df       	rcall	.-256    	; 0xfc6 <switch_menu>
    10c6:	b5 c0       	rjmp	.+362    	; 0x1232 <main+0x1f8>
		}
		else if(selected_menu == MENU_CLOCK_SET_HOUR)
    10c8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    10cc:	84 31       	cpi	r24, 0x14	; 20
    10ce:	09 f0       	breq	.+2      	; 0x10d2 <main+0x98>
    10d0:	48 c0       	rjmp	.+144    	; 0x1162 <main+0x128>
		{
			if(BUTTON_1_PRESSED)
    10d2:	33 99       	sbic	0x06, 3	; 6
    10d4:	14 c0       	rjmp	.+40     	; 0x10fe <main+0xc4>
			{
				selected_hour = add_hour(selected_hour);
    10d6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <selected_hour>
	return subtract_number(number,60);
}

int add_number(int number, int max) 
{
	number++;
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	01 96       	adiw	r24, 0x01	; 1
	
	if(number > max)
    10de:	88 31       	cpi	r24, 0x18	; 24
    10e0:	91 05       	cpc	r25, r1
    10e2:	0c f0       	brlt	.+2      	; 0x10e6 <main+0xac>
	{
		 number = 0;
    10e4:	81 2f       	mov	r24, r17
		}
		else if(selected_menu == MENU_CLOCK_SET_HOUR)
		{
			if(BUTTON_1_PRESSED)
			{
				selected_hour = add_hour(selected_hour);
    10e6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <selected_hour>
    10ea:	2f ef       	ldi	r18, 0xFF	; 255
    10ec:	81 ee       	ldi	r24, 0xE1	; 225
    10ee:	94 e0       	ldi	r25, 0x04	; 4
    10f0:	21 50       	subi	r18, 0x01	; 1
    10f2:	80 40       	sbci	r24, 0x00	; 0
    10f4:	90 40       	sbci	r25, 0x00	; 0
    10f6:	e1 f7       	brne	.-8      	; 0x10f0 <main+0xb6>
    10f8:	00 c0       	rjmp	.+0      	; 0x10fa <main+0xc0>
    10fa:	00 00       	nop
    10fc:	9a c0       	rjmp	.+308    	; 0x1232 <main+0x1f8>
				_delay_ms(200);
			}
			else if(BUTTON_2_PRESSED)
    10fe:	32 99       	sbic	0x06, 2	; 6
    1100:	12 c0       	rjmp	.+36     	; 0x1126 <main+0xec>
			{
				selected_hour = subtract_hour(selected_hour);	
    1102:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <selected_hour>
	return number; 		
}

int subtract_number(int number, int max)
{
	number--;
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	01 97       	sbiw	r24, 0x01	; 1
	
	if(number < 0)
    110a:	0a f4       	brpl	.+2      	; 0x110e <main+0xd4>
	{ 
		number = max;
    110c:	8f 2d       	mov	r24, r15
				selected_hour = add_hour(selected_hour);
				_delay_ms(200);
			}
			else if(BUTTON_2_PRESSED)
			{
				selected_hour = subtract_hour(selected_hour);	
    110e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <selected_hour>
    1112:	2f ef       	ldi	r18, 0xFF	; 255
    1114:	81 ee       	ldi	r24, 0xE1	; 225
    1116:	94 e0       	ldi	r25, 0x04	; 4
    1118:	21 50       	subi	r18, 0x01	; 1
    111a:	80 40       	sbci	r24, 0x00	; 0
    111c:	90 40       	sbci	r25, 0x00	; 0
    111e:	e1 f7       	brne	.-8      	; 0x1118 <main+0xde>
    1120:	00 c0       	rjmp	.+0      	; 0x1122 <main+0xe8>
    1122:	00 00       	nop
    1124:	86 c0       	rjmp	.+268    	; 0x1232 <main+0x1f8>
				_delay_ms(200);
			}
			else if(BUTTON_3_PRESSED)
    1126:	1a 99       	sbic	0x03, 2	; 3
    1128:	0d c0       	rjmp	.+26     	; 0x1144 <main+0x10a>
			{
				switch_menu(MENU_CLOCK_SET_MINUTE);
    112a:	85 e1       	ldi	r24, 0x15	; 21
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	4b df       	rcall	.-362    	; 0xfc6 <switch_menu>
    1130:	2f ef       	ldi	r18, 0xFF	; 255
    1132:	81 ee       	ldi	r24, 0xE1	; 225
    1134:	94 e0       	ldi	r25, 0x04	; 4
    1136:	21 50       	subi	r18, 0x01	; 1
    1138:	80 40       	sbci	r24, 0x00	; 0
    113a:	90 40       	sbci	r25, 0x00	; 0
    113c:	e1 f7       	brne	.-8      	; 0x1136 <main+0xfc>
    113e:	00 c0       	rjmp	.+0      	; 0x1140 <main+0x106>
    1140:	00 00       	nop
    1142:	77 c0       	rjmp	.+238    	; 0x1232 <main+0x1f8>
				_delay_ms(200);
			}
			else if(BUTTON_4_PRESSED) 
    1144:	19 99       	sbic	0x03, 1	; 3
    1146:	75 c0       	rjmp	.+234    	; 0x1232 <main+0x1f8>
			{
				switch_menu(MENU_CLOCK);
    1148:	81 e0       	ldi	r24, 0x01	; 1
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	3c df       	rcall	.-392    	; 0xfc6 <switch_menu>
    114e:	2f ef       	ldi	r18, 0xFF	; 255
    1150:	81 ee       	ldi	r24, 0xE1	; 225
    1152:	94 e0       	ldi	r25, 0x04	; 4
    1154:	21 50       	subi	r18, 0x01	; 1
    1156:	80 40       	sbci	r24, 0x00	; 0
    1158:	90 40       	sbci	r25, 0x00	; 0
    115a:	e1 f7       	brne	.-8      	; 0x1154 <main+0x11a>
    115c:	00 c0       	rjmp	.+0      	; 0x115e <main+0x124>
    115e:	00 00       	nop
    1160:	68 c0       	rjmp	.+208    	; 0x1232 <main+0x1f8>
					_delay_ms(200);
			};
		}
		else if(selected_menu == MENU_CLOCK_SET_MINUTE) 
    1162:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1166:	85 31       	cpi	r24, 0x15	; 21
    1168:	09 f0       	breq	.+2      	; 0x116c <main+0x132>
    116a:	53 c0       	rjmp	.+166    	; 0x1212 <main+0x1d8>
		{
			if(BUTTON_1_PRESSED)
    116c:	33 99       	sbic	0x06, 3	; 6
    116e:	14 c0       	rjmp	.+40     	; 0x1198 <main+0x15e>
			{
				selected_minute = add_minute(selected_minute);
    1170:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <selected_minute>
	return subtract_number(number,60);
}

int add_number(int number, int max) 
{
	number++;
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	01 96       	adiw	r24, 0x01	; 1
	
	if(number > max)
    1178:	8c 33       	cpi	r24, 0x3C	; 60
    117a:	91 05       	cpc	r25, r1
    117c:	0c f0       	brlt	.+2      	; 0x1180 <main+0x146>
	{
		 number = 0;
    117e:	81 2f       	mov	r24, r17
		}
		else if(selected_menu == MENU_CLOCK_SET_MINUTE) 
		{
			if(BUTTON_1_PRESSED)
			{
				selected_minute = add_minute(selected_minute);
    1180:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <selected_minute>
    1184:	2f ef       	ldi	r18, 0xFF	; 255
    1186:	81 ee       	ldi	r24, 0xE1	; 225
    1188:	94 e0       	ldi	r25, 0x04	; 4
    118a:	21 50       	subi	r18, 0x01	; 1
    118c:	80 40       	sbci	r24, 0x00	; 0
    118e:	90 40       	sbci	r25, 0x00	; 0
    1190:	e1 f7       	brne	.-8      	; 0x118a <main+0x150>
    1192:	00 c0       	rjmp	.+0      	; 0x1194 <main+0x15a>
    1194:	00 00       	nop
    1196:	4d c0       	rjmp	.+154    	; 0x1232 <main+0x1f8>
				_delay_ms(200);
			}
			else if(BUTTON_2_PRESSED)
    1198:	32 99       	sbic	0x06, 2	; 6
    119a:	13 c0       	rjmp	.+38     	; 0x11c2 <main+0x188>
			{
				selected_minute = subtract_minute(selected_minute);
    119c:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <selected_minute>
	return number; 		
}

int subtract_number(int number, int max)
{
	number--;
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	01 97       	sbiw	r24, 0x01	; 1
	
	if(number < 0)
    11a4:	12 f4       	brpl	.+4      	; 0x11aa <main+0x170>
	{ 
		number = max;
    11a6:	8c e3       	ldi	r24, 0x3C	; 60
    11a8:	90 e0       	ldi	r25, 0x00	; 0
				selected_minute = add_minute(selected_minute);
				_delay_ms(200);
			}
			else if(BUTTON_2_PRESSED)
			{
				selected_minute = subtract_minute(selected_minute);
    11aa:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <selected_minute>
    11ae:	2f ef       	ldi	r18, 0xFF	; 255
    11b0:	81 ee       	ldi	r24, 0xE1	; 225
    11b2:	94 e0       	ldi	r25, 0x04	; 4
    11b4:	21 50       	subi	r18, 0x01	; 1
    11b6:	80 40       	sbci	r24, 0x00	; 0
    11b8:	90 40       	sbci	r25, 0x00	; 0
    11ba:	e1 f7       	brne	.-8      	; 0x11b4 <main+0x17a>
    11bc:	00 c0       	rjmp	.+0      	; 0x11be <main+0x184>
    11be:	00 00       	nop
    11c0:	38 c0       	rjmp	.+112    	; 0x1232 <main+0x1f8>
				_delay_ms(200);
			}
			else if(BUTTON_3_PRESSED)
    11c2:	1a 99       	sbic	0x03, 2	; 3
    11c4:	17 c0       	rjmp	.+46     	; 0x11f4 <main+0x1ba>
			{
				hour = selected_hour;
    11c6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <selected_hour>
    11ca:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <hour>
				minute = selected_minute;
    11ce:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <selected_minute>
    11d2:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <minute>
				second = 0;
    11d6:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <second>
				switch_menu(MENU_CLOCK);
    11da:	81 e0       	ldi	r24, 0x01	; 1
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	f3 de       	rcall	.-538    	; 0xfc6 <switch_menu>
    11e0:	2f ef       	ldi	r18, 0xFF	; 255
    11e2:	81 ee       	ldi	r24, 0xE1	; 225
    11e4:	94 e0       	ldi	r25, 0x04	; 4
    11e6:	21 50       	subi	r18, 0x01	; 1
    11e8:	80 40       	sbci	r24, 0x00	; 0
    11ea:	90 40       	sbci	r25, 0x00	; 0
    11ec:	e1 f7       	brne	.-8      	; 0x11e6 <main+0x1ac>
    11ee:	00 c0       	rjmp	.+0      	; 0x11f0 <main+0x1b6>
    11f0:	00 00       	nop
    11f2:	1f c0       	rjmp	.+62     	; 0x1232 <main+0x1f8>
			
				_delay_ms(200);
			}
			else if(BUTTON_4_PRESSED)
    11f4:	19 99       	sbic	0x03, 1	; 3
    11f6:	1d c0       	rjmp	.+58     	; 0x1232 <main+0x1f8>
			{
				switch_menu(MENU_CLOCK_SET_HOUR);
    11f8:	84 e1       	ldi	r24, 0x14	; 20
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	e4 de       	rcall	.-568    	; 0xfc6 <switch_menu>
    11fe:	2f ef       	ldi	r18, 0xFF	; 255
    1200:	81 ee       	ldi	r24, 0xE1	; 225
    1202:	94 e0       	ldi	r25, 0x04	; 4
    1204:	21 50       	subi	r18, 0x01	; 1
    1206:	80 40       	sbci	r24, 0x00	; 0
    1208:	90 40       	sbci	r25, 0x00	; 0
    120a:	e1 f7       	brne	.-8      	; 0x1204 <main+0x1ca>
    120c:	00 c0       	rjmp	.+0      	; 0x120e <main+0x1d4>
    120e:	00 00       	nop
    1210:	10 c0       	rjmp	.+32     	; 0x1232 <main+0x1f8>
				_delay_ms(200);
			};
		}
		else if (selected_menu = MENU_TIMER_SET_HOUR)
    1212:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__data_start>
		{
			if(BUTTON_4_PRESSED) 
    1216:	19 99       	sbic	0x03, 1	; 3
    1218:	0c c0       	rjmp	.+24     	; 0x1232 <main+0x1f8>
			{ 
				switch_menu(MENU_TIMER);
    121a:	8e e1       	ldi	r24, 0x1E	; 30
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	d3 de       	rcall	.-602    	; 0xfc6 <switch_menu>
    1220:	2f ef       	ldi	r18, 0xFF	; 255
    1222:	81 ee       	ldi	r24, 0xE1	; 225
    1224:	94 e0       	ldi	r25, 0x04	; 4
    1226:	21 50       	subi	r18, 0x01	; 1
    1228:	80 40       	sbci	r24, 0x00	; 0
    122a:	90 40       	sbci	r25, 0x00	; 0
    122c:	e1 f7       	brne	.-8      	; 0x1226 <main+0x1ec>
    122e:	00 c0       	rjmp	.+0      	; 0x1230 <main+0x1f6>
    1230:	00 00       	nop
				_delay_ms(200);
			}
		}
			
		run();
    1232:	9d de       	rcall	.-710    	; 0xf6e <run>
	}
    1234:	0d cf       	rjmp	.-486    	; 0x1050 <main+0x16>

00001236 <__vector_11>:
}

ISR (TIMER1_COMPA_vect)
{
    1236:	1f 92       	push	r1
    1238:	0f 92       	push	r0
    123a:	0f b6       	in	r0, 0x3f	; 63
    123c:	0f 92       	push	r0
    123e:	11 24       	eor	r1, r1
    1240:	8f 93       	push	r24
	second++;
    1242:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <second>
    1246:	8f 5f       	subi	r24, 0xFF	; 255
    1248:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <second>
	if (second > 59)
    124c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <second>
    1250:	8c 33       	cpi	r24, 0x3C	; 60
    1252:	d8 f0       	brcs	.+54     	; 0x128a <__vector_11+0x54>
	{
		second = 0;
    1254:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <second>
		minute++;
    1258:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <minute>
    125c:	8f 5f       	subi	r24, 0xFF	; 255
    125e:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <minute>
		if (minute > 59)
    1262:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <minute>
    1266:	8c 33       	cpi	r24, 0x3C	; 60
    1268:	68 f0       	brcs	.+26     	; 0x1284 <__vector_11+0x4e>
		{
			minute = 0;
    126a:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <minute>
			hour++;
    126e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <hour>
    1272:	8f 5f       	subi	r24, 0xFF	; 255
    1274:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <hour>
			if (hour > 23)
    1278:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <hour>
    127c:	88 31       	cpi	r24, 0x18	; 24
    127e:	10 f0       	brcs	.+4      	; 0x1284 <__vector_11+0x4e>
			{
				hour = 0;
    1280:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <hour>
			}
			
		}
		clockChangedFlag = 1;
    1284:	81 e0       	ldi	r24, 0x01	; 1
    1286:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__data_end>
	}
    128a:	8f 91       	pop	r24
    128c:	0f 90       	pop	r0
    128e:	0f be       	out	0x3f, r0	; 63
    1290:	0f 90       	pop	r0
    1292:	1f 90       	pop	r1
    1294:	18 95       	reti

00001296 <__divmodhi4>:
    1296:	97 fb       	bst	r25, 7
    1298:	07 2e       	mov	r0, r23
    129a:	16 f4       	brtc	.+4      	; 0x12a0 <__divmodhi4+0xa>
    129c:	00 94       	com	r0
    129e:	06 d0       	rcall	.+12     	; 0x12ac <__divmodhi4_neg1>
    12a0:	77 fd       	sbrc	r23, 7
    12a2:	08 d0       	rcall	.+16     	; 0x12b4 <__divmodhi4_neg2>
    12a4:	27 d0       	rcall	.+78     	; 0x12f4 <__udivmodhi4>
    12a6:	07 fc       	sbrc	r0, 7
    12a8:	05 d0       	rcall	.+10     	; 0x12b4 <__divmodhi4_neg2>
    12aa:	3e f4       	brtc	.+14     	; 0x12ba <__divmodhi4_exit>

000012ac <__divmodhi4_neg1>:
    12ac:	90 95       	com	r25
    12ae:	81 95       	neg	r24
    12b0:	9f 4f       	sbci	r25, 0xFF	; 255
    12b2:	08 95       	ret

000012b4 <__divmodhi4_neg2>:
    12b4:	70 95       	com	r23
    12b6:	61 95       	neg	r22
    12b8:	7f 4f       	sbci	r23, 0xFF	; 255

000012ba <__divmodhi4_exit>:
    12ba:	08 95       	ret

000012bc <__divmodsi4>:
    12bc:	05 2e       	mov	r0, r21
    12be:	97 fb       	bst	r25, 7
    12c0:	16 f4       	brtc	.+4      	; 0x12c6 <__divmodsi4+0xa>
    12c2:	00 94       	com	r0
    12c4:	0f d0       	rcall	.+30     	; 0x12e4 <__negsi2>
    12c6:	57 fd       	sbrc	r21, 7
    12c8:	05 d0       	rcall	.+10     	; 0x12d4 <__divmodsi4_neg2>
    12ca:	28 d0       	rcall	.+80     	; 0x131c <__udivmodsi4>
    12cc:	07 fc       	sbrc	r0, 7
    12ce:	02 d0       	rcall	.+4      	; 0x12d4 <__divmodsi4_neg2>
    12d0:	46 f4       	brtc	.+16     	; 0x12e2 <__divmodsi4_exit>
    12d2:	08 c0       	rjmp	.+16     	; 0x12e4 <__negsi2>

000012d4 <__divmodsi4_neg2>:
    12d4:	50 95       	com	r21
    12d6:	40 95       	com	r20
    12d8:	30 95       	com	r19
    12da:	21 95       	neg	r18
    12dc:	3f 4f       	sbci	r19, 0xFF	; 255
    12de:	4f 4f       	sbci	r20, 0xFF	; 255
    12e0:	5f 4f       	sbci	r21, 0xFF	; 255

000012e2 <__divmodsi4_exit>:
    12e2:	08 95       	ret

000012e4 <__negsi2>:
    12e4:	90 95       	com	r25
    12e6:	80 95       	com	r24
    12e8:	70 95       	com	r23
    12ea:	61 95       	neg	r22
    12ec:	7f 4f       	sbci	r23, 0xFF	; 255
    12ee:	8f 4f       	sbci	r24, 0xFF	; 255
    12f0:	9f 4f       	sbci	r25, 0xFF	; 255
    12f2:	08 95       	ret

000012f4 <__udivmodhi4>:
    12f4:	aa 1b       	sub	r26, r26
    12f6:	bb 1b       	sub	r27, r27
    12f8:	51 e1       	ldi	r21, 0x11	; 17
    12fa:	07 c0       	rjmp	.+14     	; 0x130a <__udivmodhi4_ep>

000012fc <__udivmodhi4_loop>:
    12fc:	aa 1f       	adc	r26, r26
    12fe:	bb 1f       	adc	r27, r27
    1300:	a6 17       	cp	r26, r22
    1302:	b7 07       	cpc	r27, r23
    1304:	10 f0       	brcs	.+4      	; 0x130a <__udivmodhi4_ep>
    1306:	a6 1b       	sub	r26, r22
    1308:	b7 0b       	sbc	r27, r23

0000130a <__udivmodhi4_ep>:
    130a:	88 1f       	adc	r24, r24
    130c:	99 1f       	adc	r25, r25
    130e:	5a 95       	dec	r21
    1310:	a9 f7       	brne	.-22     	; 0x12fc <__udivmodhi4_loop>
    1312:	80 95       	com	r24
    1314:	90 95       	com	r25
    1316:	bc 01       	movw	r22, r24
    1318:	cd 01       	movw	r24, r26
    131a:	08 95       	ret

0000131c <__udivmodsi4>:
    131c:	a1 e2       	ldi	r26, 0x21	; 33
    131e:	1a 2e       	mov	r1, r26
    1320:	aa 1b       	sub	r26, r26
    1322:	bb 1b       	sub	r27, r27
    1324:	fd 01       	movw	r30, r26
    1326:	0d c0       	rjmp	.+26     	; 0x1342 <__udivmodsi4_ep>

00001328 <__udivmodsi4_loop>:
    1328:	aa 1f       	adc	r26, r26
    132a:	bb 1f       	adc	r27, r27
    132c:	ee 1f       	adc	r30, r30
    132e:	ff 1f       	adc	r31, r31
    1330:	a2 17       	cp	r26, r18
    1332:	b3 07       	cpc	r27, r19
    1334:	e4 07       	cpc	r30, r20
    1336:	f5 07       	cpc	r31, r21
    1338:	20 f0       	brcs	.+8      	; 0x1342 <__udivmodsi4_ep>
    133a:	a2 1b       	sub	r26, r18
    133c:	b3 0b       	sbc	r27, r19
    133e:	e4 0b       	sbc	r30, r20
    1340:	f5 0b       	sbc	r31, r21

00001342 <__udivmodsi4_ep>:
    1342:	66 1f       	adc	r22, r22
    1344:	77 1f       	adc	r23, r23
    1346:	88 1f       	adc	r24, r24
    1348:	99 1f       	adc	r25, r25
    134a:	1a 94       	dec	r1
    134c:	69 f7       	brne	.-38     	; 0x1328 <__udivmodsi4_loop>
    134e:	60 95       	com	r22
    1350:	70 95       	com	r23
    1352:	80 95       	com	r24
    1354:	90 95       	com	r25
    1356:	9b 01       	movw	r18, r22
    1358:	ac 01       	movw	r20, r24
    135a:	bd 01       	movw	r22, r26
    135c:	cf 01       	movw	r24, r30
    135e:	08 95       	ret

00001360 <_exit>:
    1360:	f8 94       	cli

00001362 <__stop_program>:
    1362:	ff cf       	rjmp	.-2      	; 0x1362 <__stop_program>
